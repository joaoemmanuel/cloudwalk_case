WITH RISK_QTYCBK AS( 
	SELECT
		USER_ID || '-' || DEVICE_ID AS TENTATIVA,
		COUNT(TRANSACTION_ID) AS TRANSACTIONS
	FROM
		TRANSACTIONAL_SAMPLE
	WHERE
		HAS_CBK = TRUE
	GROUP BY
		TENTATIVA
	HAVING
		DEVICE_ID NOT NULL
	ORDER BY 2 DESC)
SELECT * FROM RISK_QTYCBK;

WITH RISK_VALUES AS(
	SELECT 
	USER_ID,
	TRANSACTION_AMOUNT,
	AVG(TRANSACTION_AMOUNT) AS MEDIA,
	CASE 
		WHEN TRANSACTION_AMOUNT > (2*(AVG(TRANSACTION_AMOUNT))) THEN 'RISK'
		ELSE 'NOT_RISK'
	END AS RISK_MEASUREMENT	
FROM 
	TRANSACTIONAL_SAMPLE
GROUP BY
	USER_ID
ORDER BY 
	4 DESC)
SELECT * FROM RISK_VALUES;

WITH RISK_TRANSACTTIME AS(
	SELECT 
		* 
	FROM 
		TRANSACTIONAL_SAMPLE
	WHERE 
		TRANSACTION_TIME BETWEEN '00:00:00' AND '06:00:00'
	ORDER BY 
	USER_ID, TRANSACTION_DATE)
SELECT * FROM RISK_TRANSACTTIME;

WITH RISK_QTYTRIES AS(
	SELECT
		USER_ID || '-' || MERCHANT_ID AS SALE,
		TRANSACTION_DATE,
		CARD_NUMBER,
		COUNT(*) AS TRANSACTIONS
	FROM
		TRANSACTIONAL_SAMPLE
	WHERE
		HAS_CBK = TRUE
	GROUP BY
		SALE, TRANSACTION_DATE, CARD_NUMBER
	HAVING
		COUNT(*) > 3
	ORDER BY
		4 DESC)
SELECT * FROM RISK_QTYTRIES;

WITH RISK_CARDCOUNT AS(
SELECT
	USER_ID,
	COUNT(DISTINCT CARD_NUMBER)
FROM
	TRANSACTIONAL_SAMPLE
GROUP BY
	USER_ID
HAVING
	COUNT(DISTINCT CARD_NUMBER) > 2
ORDER BY 2 DESC)
SELECT * FROM RISK_CARDCOUNT

WITH RISK_QTYDEVICE AS(
	SELECT 
		USER_ID,
		COUNT(DEVICE_ID)
	FROM 
		TRANSACTIONAL_SAMPLE
	GROUP BY 
		USER_ID
	HAVING 
		COUNT(DEVICE_ID) > 2
	ORDER BY 
		2 DESC)
SELECT * FROM RISK_QTYDEVICE;